HashPassword:
  handler: src/lambdas/photographers/hashPassword.handler
  events:
    - http:
        path: hash-password
        method: post
        cors: true
SignIn:
  handler: src/lambdas/photographers/signIn.handler
  events:
    - http:
        path: sign-in
        method: post
        cors: true

CreateAlbum:
  handler: src/lambdas/albums/createAlbum.handler
  events:
    - http:
        path: albums
        method: post
        cors: true

GetAlbums:
  handler: src/lambdas/albums/get.handler
  events:
    - http:
        path: albums
        method: get
        cors: true

UploadPhotos:
  handler: src/lambdas/photos/uploadMany.handler
  events:
    - http:
        path: photos
        method: post
        cors: true
  memorySize: 1000
  timeout: 10

GetAllPhotos:
  handler: src/lambdas/photos/getAll.handler
  events:
    - http:
        path: photos
        method: get
        cors: true

UploadSelfie:
  handler: src/lambdas/photos/uploadSelfie.handler
  events:
    - http:
        path: user/selfie
        method: post
        cors: true

AssociateClientsWithAlbum:
  handler: src/lambdas/albums/associateClientsWithAlbum.handler
  events:
    - http:
        path: album/addClients
        method: post
        cors: true

AddWatermarkAndThumbnailAddToDb:
  handler: src/lambdas/photos/addPhoto.handler
  events:
    - s3:
        bucket: photo-drop-images
        event: s3:ObjectCreated:*
        existing: true
        rules:
          - prefix: originalPhotos/
  memorySize: 1000
  timeout: 10

GetAllUsers:
  handler: src/lambdas/users/getAllUsers.handler
  events:
    - http:
        path: users
        method: get
        cors: true

GetConfirmationCode:
  handler: src/lambdas/users/getConfirmationCode.handler
  events:
    - http:
        path: user/getConfirmationCode
        method: post
        cors: true

ResendCode:
  handler: src/lambdas/users/resendCode.handler
  events:
    - http:
        path: user/resendCode
        method: post
        cors: true

LoginOrRegistration:
  handler: src/lambdas/users/loginOrRegister.handler
  events:
    - http:
        path: users
        method: post
        cors: true

UserUpdate:
  handler: src/lambdas/users/update.handler
  events:
    - http:
        path: users/{updateField}
        method: put
        cors: true

CreatePayment:
  handler: src/lambdas/payments/createIntent.handler
  events:
    - http:
        path: payment
        method: get
        cors: true
