HashPassword:
  handler: src/lambdas/photographers/hashPassword.handler
  events:
    - http:
        path: hash-password
        method: post
        cors: true
SignIn:
  handler: src/lambdas/photographers/signIn.handler
  events:
    - http:
        path: sign-in
        method: post
        cors: true

Refresh:
  handler: src/lambdas/photographers/refresh.handler
  events:
    - http:
        path: refresh
        method: post
        cors: true

CreateAlbum:
  handler: src/lambdas/albums/createAlbum.handler
  events:
    - http:
        path: album
        method: post
        cors: true

GetAlbum:
  handler: src/lambdas/albums/getAlbum.handler
  events:
    - http:
        path: album
        method: get
        cors: true

GetAllAlbums:
  handler: src/lambdas/albums/getAllAlbums.handler
  events:
    - http:
        path: albums
        method: get
        cors: true

UploadPhotos:
  handler: src/lambdas/photos/uploadMany.handler
  events:
    - http:
        path: photos
        method: post
        cors: true
  memorySize: 1000
  timeout: 10

GetAlbumPhotos:
  handler: src/lambdas/photos/getAlbumPhotos.handler
  events:
    - http:
        path: album/{albumId}/photos
        method: get
        cors: true


AddWatermarkAndThumbnailAddToDb:
  handler: src/lambdas/photos/addPhoto.handler
  events:
    - s3:
        bucket: photo-drop-images
        event: s3:ObjectCreated:*
        existing: true
        rules:
          - prefix: originalPhotos/
  memorySize: 1000
  timeout: 10

GetAllUsers:
  handler: src/lambdas/users/getAllUsers.handler
  events:
    - http:
        path: users
        method: get
        cors: true
